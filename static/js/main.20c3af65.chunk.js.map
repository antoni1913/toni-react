{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","propTyoes","PropTypes","string","func","Header","title","console","log","propType","isRequired","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","pointer","day","Tasks","tasks","map","App","useState","setTasks","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAGMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAE3B,OACA,wBAAQA,QAASA,EACjBC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAFV,SAGcJ,KAKlBF,EAAOO,aAAe,CAClBN,MAAO,aAEXD,EAAOQ,UAAY,CACfN,KAAMO,IAAUC,OAChBT,MAAOQ,IAAUC,OACjBP,QAASM,IAAUE,MAERX,QClBTY,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAId,OACG,yBAAQP,UAAU,SAAlB,UACI,6BAAKO,IACH,cAAC,EAAD,CAAQZ,MAAM,QAAQC,KAAK,MAAMC,QAN1B,WACZW,QAAQC,IAAI,gBAYhBH,EAAOL,aAAe,CAClBM,MAAO,oBAIfD,EAAOI,SAAW,CACdH,MAAOJ,IAAUC,OAAOO,YAIbL,Q,OChBAM,EAVF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKf,UAAS,eAAUa,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,mCAAML,EAAKjB,KAAX,IAAiB,cAAC,IAAD,CAASE,MAAO,CAAEH,MAAO,MAAMwB,QAAS,WACzDtB,QAAS,kBAAMiB,EAASD,EAAKK,OAD7B,OAEA,kCAAKL,EAAKO,IAAV,WCUGC,EAdD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOR,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAE1B,OACA,mCACIO,EAAMC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CACAA,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHCF,EAAKK,UC2CZM,EA9CH,WACX,MAA0BC,mBAAS,CAC/B,CACGP,GAAI,EACJtB,KAAM,cACNwB,IAAK,+BACLJ,UAAU,GAEd,CACIE,GAAI,EACJtB,KAAM,iBACNwB,IAAK,cACLJ,UAAU,GAEd,CACIE,GAAI,EACJtB,KAAM,gBACNwB,IAAK,yBACLJ,UAAU,KAjBjB,mBAAOM,EAAP,KAAcI,EAAd,KAgCC,OACE,sBAAK1B,UAAU,YAAf,UACA,cAAC,EAAD,IACCsB,EAAMK,OAAS,EAChB,cAAC,EAAD,CAAOL,MAAOA,EAAOR,SAfP,SAACI,GACjBQ,EAASJ,EAAMM,QAAO,SAACf,GAAD,OAAUA,EAAKK,KAAOA,MAC5CV,QAAQC,IAAI,SAAUS,IAcpBH,SAVmB,SAACG,GACvBQ,EAASJ,EAAMC,KAAI,SAACV,GAAD,OAAUA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAYH,SAW/E,+BCjCSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.20c3af65.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => { \r\n    \r\n    return (\r\n    <button onClick={onClick}\r\n    style={{ backgroundColor: color }} \r\n    className='btn' >\r\n                 {text}\r\n         </button>\r\n         )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\nButton.propTyoes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({ title }) => {\r\n    const onClick = () => {\r\n        console.log('click')\r\n    }\r\n    return (\r\n       <header className='header'>\r\n           <h1>{title}</h1>\r\n             <Button color='green' text='Add' onClick=\r\n             {onClick} />\r\n             \r\n           \r\n      </header>\r\n    )\r\n}\r\n    Header.defaultProps = {\r\n        title: 'Task blqqTracker',\r\n    }\r\n\r\n\r\nHeader.propType = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3> {task.text} <FaTimes style={{ color: 'red',pointer: 'pointer'}}\r\n            onClick={() => onDelete(task.id)}/> </h3>\r\n            <p> {task.day} </p>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n        return(\r\n        <>\r\n           {tasks.map((task) => (\r\n           <Task key={task.id} \r\n           task={task}\r\n           onDelete={onDelete}\r\n           onToggle={onToggle} />\r\n           ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","\nimport { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from  './components/Tasks'\n\nconst App = () => {\n const [tasks, setTasks] = useState([\n     {\n        id: 1,\n        text: 'doktor toni',\n        day: 'trinasiti dekewri v 12 chasa',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'toni e op toni',\n        day: '12 19 10000',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'antoni sariew',\n        day: '10000 kila tonito e op',\n        reminder: false,\n    }\n])\n//Delete Task\nconst deleteTask =(id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n  console.log('delete', id)\n}\n// toggle reminder\n\nconst toggleReminder = (id) => {\n setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n\n}\n\n  return (\n    <div className='container'> \n    <Header />\n    {tasks.length > 0 ? (\n    <Tasks tasks={tasks} onDelete={deleteTask} \n    onToggle={toggleReminder}/>\n    ) : (\n      'nqma nishto za pokazwane'\n    )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}